on:
  push:
    branches:
    - develop
    - master
  pull_request:
    branches:
    - main
    - develop
    
jobs:
  setup:
    name: Workflow setup
    runs-on: ${{ matrix.os }}
    outputs:
      branch: ${{ steps.extract_branch.outputs.branch }}
    strategy:
      matrix:
        node_version: ['18']
        os: [ubuntu-latest]
        build_dir: ['./dist']
        package_name: ['build.zip']

    steps:
    - name: Extract branch name
      shell: bash
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
      id: extract_branch
       
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: setup
    strategy:
      matrix:
        node_version: ['18']
        os: [ubuntu-latest]
        build_dir: ['./dist']
        package_name: ['build.zip']

    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node_version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node_version }}

    - name: npm install, build and test
      run: |
        npm install
        npm install -g typescript
        npm run build
        zip -r ${{ matrix.package_name }} ${{ matrix.build_dir }}
    
    - uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.package_name }}
        path: ${{ matrix.build_dir }}
        retention-days: 1
    
  deploy:
    name: Deploy
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        node_version: ['18']
        os: [ubuntu-latest]
        build_dir: ['./dist']
        package_name: ['build.zip']
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: ${{ matrix.package_name }}
        path: ${{ matrix.build_dir }}
      
    - uses: actions/checkout@v1
    - name: Deploy to digital ocean
      run: |
        echo "$SSH_PRIVATE_KEY" > $SSH_KEY_FILE
        echo "$SSH_KNOWN_HOSTS" > $SSH_KNOWN_HOSTS_FILE
        sudo chmod 600 $SSH_KEY_FILE
        scp -i $SSH_KEY_FILE -o UserKnownHostsFile=$SSH_KNOWN_HOSTS_FILE $PACKAGE_URL $SSH_USER@$SSH_HOST:$DEPLOY_URL
      shell: bash
      env:
        SSH_USER: ${{ secrets.DIGITAL_OCEAN_USER }}
        SSH_HOST: ${{ secrets.DIGITAL_OCEAN_HOST }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        SSH_KEY_FILE: pk
        SSH_KNOWN_HOSTS_FILE: kh
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        PACKAGE_URL: ./${{ matrix.package_name }}
        DEPLOY_URL: ${{ secrets.CLOUD_DEPLOY_URL }}/${{ matrix.package_name }}
        
